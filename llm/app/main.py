from fastapi import FastAPI
import logging
import sys
import asyncio
from services.llm_orchestrator import LLMOrchestrator
from api.endpoints import router

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
    handlers=[logging.StreamHandler(sys.stdout)],
)

logger = logging.getLogger("nutrition-llm")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="Nutrition LLM Service",
    version="1.0.0",
    description="–ì–∏–±—Ä–∏–¥–Ω—ã–π LLM —Å–µ—Ä–≤–∏—Å –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø–∏—Ç–∞–Ω–∏–∏ –∏ —Ñ–∏—Ç–Ω–µ—Å–µ"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
llm_orchestrator = LLMOrchestrator()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
app.include_router(router)

@app.on_event("startup")
async def startup_event():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üöÄ Starting Nutrition LLM Service...")
    await asyncio.sleep(15)
    await llm_orchestrator.initialize()

@app.on_event("shutdown")
async def shutdown_event():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
    logger.info("üõë Shutting down Nutrition LLM Service...")