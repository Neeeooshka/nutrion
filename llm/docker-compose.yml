services:
  ollama:
    image: ollama/ollama:latest
    container_name: nutrion_ollama
    restart: always
    networks:
      - nutrion_net
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 60s
      
  ollama-init:
    image: ollama/ollama:latest
    container_name: ollama_init
    networks:
      - nutrion_net
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama_data:/root/.ollama
    command: >
      sh -c "
        echo 'üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥–µ–ª–∏ Ollama...' &&
        ollama pull llama3.2:3b &&
        echo '‚úÖ llama3.2:3b —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' &&
        ollama pull qwen2.5:7b && 
        echo '‚úÖ qwen2.5:7b —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' &&
        echo 'üéâ –í—Å–µ –º–æ–¥–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!'
      "
    restart: "no"
  
  llm:
    build: ./app
    container_name: nutrion_llm
    restart: always
    env_file:
      - ../.env
    networks:
      - nutrion_net
    ports:
      - "8001:8000"
    depends_on:
      - ollama
    environment:
      - OLLAMA_HOST=http://ollama:11434

  nginx:
    image: nginx:latest
    container_name: nutrion_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - nutrion_net
  
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: always
    ports:
      - 8008:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nutrion_net

networks:
  nutrion_net:
    driver: bridge

volumes:
  ollama_data: